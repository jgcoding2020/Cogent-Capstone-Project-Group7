import { Component, OnInit } from "@angular/core";
import { Admin } from "./admin";
import { AdminService } from "./admin-service";
import { Login } from "./login";

@Component({
    selector: 'admin-sign-up',
    templateUrl: './admin-sign-up.component.html',
    styleUrls: ['./admin-sign-up.component.css']
})

export class AdminSignUpComponent implements OnInit {

    message: string = "This is admin-sign-up";

    admins: Admin[];
    currentAdmin: Admin;
    currentAdminId: number;
    registerForm: Admin;
    loginForm: Login;
    link: string = "/admin-home";
    toggleLink = false;

    constructor(private adminservice: AdminService){
        this.admins = [];
        this.currentAdmin = new Admin();
        this.currentAdminId = 0;
        this.registerForm = new Admin();
        this.loginForm = new Login();
    }

    ngOnInit(): void {
        this.adminservice.getAdmins().subscribe((data: Admin[])=>{
            console.log(data);
            this.admins = data;
        })
    }

    onSubmitAdd(addUserForm: any)
    {
        this.currentAdmin.id = this.currentAdminId; // initialized as 0 since autogenerated on backend;
        this.currentAdmin.name = addUserForm.value.name;
        this.currentAdmin.username = addUserForm.value.username;
        this.currentAdmin.password = addUserForm.value.password;
        this.currentAdmin.email = addUserForm.value.email;
        this.currentAdmin.userType = "user"; // default setting as type user when account is created

        console.log(addUserForm.value);

        this.adminservice.addAdmin(this.currentAdmin).subscribe();
    }

    onSubmitLogin(userLoginForm: any){

        this.currentAdmin.id = 0;
        this.loginForm.username = userLoginForm.value.username;
        this.loginForm.password = userLoginForm.value.password;

        this.adminservice.loginAdmin(this.loginForm).subscribe((data: Login) => {
            this.currentAdmin = <Admin>data;
            console.log(this.currentAdmin);

            if (this.currentAdmin.id != 0)
                this.toggleLink = true;
            else
                alert("Username and password is invalid")
        })
    }

    go(): string {
        return this.link;
    }

    refresh()
    {
        window.location.reload();
    }

    resetForm()
    {
        this.registerForm = new Admin();
    } 
}